{"version":3,"file":"static/js/732.4025a3a9.chunk.js","mappings":"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","sources":["Components/Cart.js","Components/Shared Components/SharedProductCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SharedProductCard from \"./Shared Components/SharedProductCard\";\r\n\r\nconst Cart = () => {\r\n\r\n    const state = useSelector((state) => state.productState)\r\n    console.log(state)\r\n\r\n    const lightmode = useSelector((state)=>state.productState.daynightmode)\r\n\r\n    return (\r\n        <>\r\n            <section className=\"outer-section\">\r\n                <div className=\"outer-div-container\">\r\n                    <div className=\"content-holder-div\">\r\n                        <h1 className={lightmode ? \"darkthemecolor\" : \"lightthemecolor\"}>Cart</h1>\r\n                        <div className=\"task8-products-holder\">\r\n                            {state.cart.length===0 ? <h1 className={lightmode ? \"empty-cart-h1 darkthemecolor\" : \"empty-cart-h1 lightthemecolor\"}>Empty Cart</h1> : state.cart.map((ele,i)=>{\r\n                                return (\r\n                                    <SharedProductCard data={ele} index={i} />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React from \"react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\nimport Rating from '@mui/material/Rating';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addtocart, removefromcart } from \"../../Redux/Product/ProductAction\";\r\nimport {\r\n    useNavigate\r\n} from 'react-router-dom'\r\n\r\nconst SharedProductCard = ({data, index}) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const stateCart = useSelector((state)=>state.productState.cart)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const lightmode = useSelector((state)=>state.productState.daynightmode)\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{ maxWidth: 345, width: 350 }}>\r\n                <CardActionArea onClick={()=>navigate(`/product/${data.id}`)}>\r\n                    <CardMedia\r\n                    component=\"img\"\r\n                    height=\"300\"\r\n                    image={data.image}\r\n                    alt=\"green iguana\"\r\n                    />\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {data.title.length>17 ? data.title.slice(0,17)+\"...\" : data.title}\r\n                    </Typography>\r\n                    {/* <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {data.description.length>80 ? data.description.slice(0,80)+\"...\" : data.description}\r\n                    </Typography> */}\r\n                    </CardContent>\r\n                    <CardContent>\r\n                            <div className=\"price-p-holder\">\r\n                                <p className=\"rating-price-p\">Price: $ {data.price}</p>    \r\n                            </div>\r\n                            <div className=\"price-p-holder\">\r\n                                <p className=\"rating-price-p\">Rating: <Rating name=\"read-only\" value={data.rating.rate} precision={0.1} readOnly /></p>    \r\n                            </div>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        {stateCart.some(prod => prod.id === data.id) ? \r\n                        <Button variant=\"contained\" style={{width: \"100%\", backgroundColor: \"orange\"}} onClick={()=>dispatch(removefromcart(data.id))}>REMOVE FROM CART</Button> :\r\n                        <Button variant=\"contained\" style={{width: \"100%\"}} className={lightmode && \"darktheme\"} onClick={()=>dispatch(addtocart(data))}>ADD TO CART</Button>\r\n                        }\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SharedProductCard;"],"names":["state","useSelector","productState","console","log","lightmode","daynightmode","_jsx","_Fragment","children","className","_jsxs","cart","length","map","ele","i","SharedProductCard","data","index","_ref","navigate","useNavigate","stateCart","dispatch","useDispatch","Card","sx","maxWidth","width","CardActionArea","onClick","concat","id","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","variant","title","slice","price","Rating","name","value","rating","rate","precision","readOnly","CardActions","Button","size","color","some","prod","style","backgroundColor","removefromcart","addtocart"],"sourceRoot":""}