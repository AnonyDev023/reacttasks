{"version":3,"file":"static/js/315.aac1a92d.chunk.js","mappings":"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","sources":["Components/Task7.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios'\r\nimport { FetchProducts, UploadImgApi } from \"../Config/Api\";\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst categoryoptions = [\r\n    {\r\n      value: \"men's clothing\",\r\n      label: \"men's clothing\",\r\n    },\r\n    {\r\n      value: 'jewelery',\r\n      label: 'jewelery',\r\n    },\r\n    {\r\n      value: 'electronics',\r\n      label: 'electronics',\r\n    },\r\n    {\r\n      value: \"women's clothing\",\r\n      label: \"women's clothing\",\r\n    },\r\n  ];\r\n\r\nconst Task7 = () => {\r\n\r\n    const [data, setData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        category: \"\",\r\n        image: \"\"\r\n    })\r\n\r\n    const [imgsrc, setImgsrc] = useState(\"\")\r\n\r\n    const [val, setVal] = useState({})\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const lightmode = useSelector((state)=>state.productState.daynightmode)\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        const {name, value} = e.target\r\n        setData({\r\n            ...data,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleImgInput = (e) => {\r\n        setVal(e.target.files[0])\r\n        setImgsrc(URL.createObjectURL(e.target.files[0]))\r\n    }\r\n\r\n    console.log(data)\r\n    console.log(imgsrc)\r\n\r\n    const finalproductupload = () => {\r\n        setOpen(true)\r\n        const senddata = {\r\n            title : data.title,\r\n            description : data.description,\r\n            image : data.image,\r\n            category : data.category,\r\n            price : data.price\r\n        }\r\n        axios.post(\r\n            FetchProducts,\r\n            senddata\r\n        )\r\n        .then((response)=>{\r\n            console.log(response)\r\n            setData({\r\n                title: \"\",\r\n                description: \"\",\r\n                price: \"\",\r\n                category: \"\",\r\n                image: \"\"\r\n            })\r\n            setImgsrc(\"\")\r\n            setOpen(false)\r\n            handleClickVariant(\"success\")\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const uploadImg = (formdata) => {\r\n        axios.post(\r\n            UploadImgApi,\r\n            formdata\r\n        )\r\n        .then((response)=>{\r\n            console.log(response)\r\n            if (response){\r\n                data.image = response?.data?.Url\r\n                finalproductupload()\r\n            }\r\n        })\r\n        .catch((error)=>[\r\n            console.log(error)\r\n        ])\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const formdata = new FormData()\r\n        formdata.append(\"image\", val, val.name)\r\n        console.log(formdata)\r\n        uploadImg(formdata)\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setData({\r\n            title: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            category: \"\",\r\n            image: \"\"\r\n        })\r\n        setImgsrc(\"\")\r\n    }\r\n\r\n    const validateData = () => {\r\n        if(data.title!==\"\" && data.description!==\"\" && data.price!==\"\" && imgsrc!==\"\" && data.category!==\"\"){\r\n            return false\r\n        }\r\n        else{\r\n            return true\r\n        }\r\n    }\r\n\r\n    const validateDataSingly = () => {\r\n        if (data.title.trim()===\"\" && data.description.trim()===\"\" && data.price.trim()===\"\" && imgsrc===\"\" && data.category===\"\"){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    const handleClickVariant = (variant) => () => {\r\n        enqueueSnackbar('This is a success message!', { variant });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <section className=\"outer-section\">\r\n                <div className=\"outer-div-container\">\r\n                    <div className=\"content-holder-div\">\r\n                    {open && <Backdrop\r\n                        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                        open={open}\r\n                    >\r\n                        <CircularProgress color=\"inherit\" />\r\n                    </Backdrop>}\r\n                        <h1 className={lightmode ? \"darkthemecolor\" : \"lightthemecolor\"}>Task7</h1>\r\n                        <div className=\"task7-holder-div\">\r\n                            <form>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={4}>\r\n                                        <div className={lightmode ? \"form-img-div bg-div-dark-border\" : \"form-img-div\"}>\r\n                                            {imgsrc && <img src={imgsrc} className=\"img-form-css\" />}\r\n                                            {!imgsrc ? <label htmlFor=\"img-inp-id\">Select Image</label> : <label htmlFor=\"img-inp-id\" className={lightmode ? \"change-img-label-css darkthemecolor\" : \"change-img-label-css\"}>Change Image</label> }\r\n                                            <input type=\"file\"  className=\"img-inp\" id=\"img-inp-id\" onChange={handleImgInput}  />\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={6}>\r\n                                                <TextField fullWidth label=\"Title\" color={lightmode ? \"error\" : \"primary\"} id=\"fullWidth\" name=\"title\" value={data.title} onChange={handleInput} />\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <TextField fullWidth label=\"Price\" color={lightmode ? \"error\" : \"primary\"} inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} name=\"price\" value={data.price} onChange={handleInput} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={6}>\r\n                                                <TextField multiline fullWidth label=\"Description\" color={lightmode ? \"error\" : \"primary\"} id=\"fullWidth\" name=\"description\" value={data.description} onChange={handleInput} />\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <TextField\r\n                                                    id=\"outlined-select-currency\"\r\n                                                    select\r\n                                                    fullWidth\r\n                                                    label=\"Category\"\r\n                                                    // defaultValue=\"EUR\"\r\n                                                    // helperText=\"Please select your currency\"\r\n                                                    color={lightmode ? \"error\" : \"primary\"}\r\n                                                    name=\"category\"\r\n                                                    onChange={handleInput}\r\n                                                    value={data.category}\r\n                                                    >\r\n                                                    {categoryoptions.map((option) => (\r\n                                                        <MenuItem key={option.value} value={option.value}>\r\n                                                        {option.label}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={6}>\r\n                                                <Button variant=\"contained\" color=\"success\" className=\"form-btn\" onClick={handleSubmit} disabled={validateData()}>\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <Button variant=\"contained\" color=\"warning\" className=\"form-btn\" onClick={handleReset} disabled={validateDataSingly()}>\r\n                                                    Reset\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* <Button onClick={handleClickVariant('success')}>Show success snackbar</Button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task7;"],"names":["categoryoptions","value","label","_useState","useState","title","description","price","category","image","_useState2","_slicedToArray","data","setData","_useState3","_useState4","imgsrc","setImgsrc","_useState5","_useState6","val","setVal","_React$useState","React","_React$useState2","open","setOpen","enqueueSnackbar","useSnackbar","lightmode","useSelector","state","productState","daynightmode","handleInput","e","_e$target","target","name","_objectSpread","_defineProperty","console","log","uploadImg","formdata","axios","UploadImgApi","then","response","_response$data","Url","senddata","FetchProducts","handleClickVariant","catch","error","finalproductupload","variant","_jsx","_Fragment","children","className","_jsxs","Backdrop","sx","color","zIndex","theme","drawer","CircularProgress","Grid","container","spacing","item","xs","src","htmlFor","type","id","onChange","files","URL","createObjectURL","TextField","fullWidth","inputProps","inputMode","pattern","multiline","select","map","option","MenuItem","Button","onClick","preventDefault","FormData","append","disabled","trim"],"sourceRoot":""}